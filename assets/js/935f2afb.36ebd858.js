"use strict";(self.webpackChunkoverreact_docs=self.webpackChunkoverreact_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Getting Started","href":"/docs/getting-started","docId":"getting-started","unlisted":false},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Game Loop","href":"/docs/guides/game-loop","docId":"guides/game-loop","unlisted":false},{"type":"link","label":"Properties","href":"/docs/guides/properties","docId":"guides/properties","unlisted":false}]},{"type":"category","label":"Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Device","href":"/docs/components/device","docId":"components/device","unlisted":false},{"type":"link","label":"Engine","href":"/docs/components/engine","docId":"components/engine","unlisted":false}]},{"type":"category","label":"Hooks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"useProperty","href":"/docs/hooks/use-property","docId":"hooks/use-property","unlisted":false},{"type":"link","label":"useRender","href":"/docs/hooks/use-render","docId":"hooks/use-render","unlisted":false},{"type":"link","label":"useTicker","href":"/docs/hooks/use-ticker","docId":"hooks/use-ticker","unlisted":false},{"type":"link","label":"useUpdate","href":"/docs/hooks/use-update","docId":"hooks/use-update","unlisted":false}]}]},"docs":{"components/device":{"id":"components/device","title":"Device","description":"This component provides access to the dimensions of the device on which it\'s running. Nested component can access this information using the useDevice hook.","sidebar":"tutorialSidebar"},"components/engine":{"id":"components/engine","title":"Engine","description":"Where it all begins. The engine setups up the game loop, along with the following:","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"Added Overreact to your project is as simple as:","sidebar":"tutorialSidebar"},"guides/game-loop":{"id":"guides/game-loop","title":"Game Loop","description":"Overview","sidebar":"tutorialSidebar"},"guides/properties":{"id":"guides/properties","title":"Properties","description":"In Overreact you\'ll work with props a little differently to how you would typically use props in a React app.","sidebar":"tutorialSidebar"},"hooks/use-property":{"id":"hooks/use-property","title":"useProperty","description":"Coalesce a Prop (either a Property or a literal value) into a Property. See the guide on passing props for a detailed explanation on how props are used in Overreact.","sidebar":"tutorialSidebar"},"hooks/use-render":{"id":"hooks/use-render","title":"useRender","description":"Register a callback function that will be invoked every frame, regardless of whether or not the game is paused. It is responsible for updating the appearance of elements in the DOM to reflect the current game state.","sidebar":"tutorialSidebar"},"hooks/use-ticker":{"id":"hooks/use-ticker","title":"useTicker","description":"Register a callback function that will be invoked once per frame. It it like useUpdate but runs even when the game is paused.","sidebar":"tutorialSidebar"},"hooks/use-update":{"id":"hooks/use-update","title":"useUpdate","description":"Register a callback function that will be invoked once per frame, whilst the game is not paused. It is responsible for updating some of the game state.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Overreact is a browser-based game engine, built on top of React, which renders to the DOM, is is styled with plain old CSS!","sidebar":"tutorialSidebar"}}}')}}]);