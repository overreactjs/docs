"use strict";(self.webpackChunkoverreact_docs=self.webpackChunkoverreact_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Getting Started","href":"/docs/getting-started","docId":"getting-started","unlisted":false},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Game Loop","href":"/docs/guides/game-loop","docId":"guides/game-loop","unlisted":false},{"type":"link","label":"Properties","href":"/docs/guides/properties","docId":"guides/properties","unlisted":false},{"type":"link","label":"Event Handling","href":"/docs/guides/event-handling","docId":"guides/event-handling","unlisted":false}]},{"type":"category","label":"Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"BitmapImage","href":"/docs/components/bitmap-image","docId":"components/bitmap-image","unlisted":false},{"type":"link","label":"BitmapSprite","href":"/docs/components/bitmap-sprite","docId":"components/bitmap-sprite","unlisted":false},{"type":"link","label":"Box","href":"/docs/components/box","docId":"components/box","unlisted":false},{"type":"link","label":"Camera","href":"/docs/components/camera","docId":"components/camera","unlisted":false},{"type":"link","label":"Circle","href":"/docs/components/circle","docId":"components/circle","unlisted":false},{"type":"link","label":"CollisionBox","href":"/docs/components/collision-box","docId":"components/collision-box","unlisted":false},{"type":"link","label":"Device","href":"/docs/components/device","docId":"components/device","unlisted":false},{"type":"link","label":"Engine","href":"/docs/components/engine","docId":"components/engine","unlisted":false},{"type":"link","label":"Node","href":"/docs/components/node","docId":"components/node","unlisted":false},{"type":"link","label":"ParticleGenerator","href":"/docs/components/particle-generator","docId":"components/particle-generator","unlisted":false},{"type":"link","label":"PhysicsBox","href":"/docs/components/physics-box","docId":"components/physics-box","unlisted":false},{"type":"link","label":"PhysicsCircle","href":"/docs/components/physics-circle","docId":"components/physics-circle","unlisted":false},{"type":"link","label":"Physics","href":"/docs/components/physics","docId":"components/physics","unlisted":false},{"type":"link","label":"SpriteSet","href":"/docs/components/sprite-set","docId":"components/sprite-set","unlisted":false},{"type":"link","label":"Tilemap","href":"/docs/components/tilemap","docId":"components/tilemap","unlisted":false},{"type":"link","label":"VectorSprite","href":"/docs/components/vector-sprite","docId":"components/vector-sprite","unlisted":false},{"type":"link","label":"Viewport","href":"/docs/components/viewport","docId":"components/viewport","unlisted":false},{"type":"link","label":"World","href":"/docs/components/world","docId":"components/world","unlisted":false}]},{"type":"category","label":"Hooks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"useAudio","href":"/docs/hooks/use-audio","docId":"hooks/use-audio","unlisted":false},{"type":"link","label":"useCollision","href":"/docs/hooks/use-collision","docId":"hooks/use-collision","unlisted":false},{"type":"link","label":"useDevice","href":"/docs/hooks/use-device","docId":"hooks/use-device","unlisted":false},{"type":"link","label":"useDynamicProperty","href":"/docs/hooks/use-dynamic-property","docId":"hooks/use-dynamic-property","unlisted":false},{"type":"link","label":"useElement","href":"/docs/hooks/use-element","docId":"hooks/use-element","unlisted":false},{"type":"link","label":"useKeyboard","href":"/docs/hooks/use-keyboard","docId":"hooks/use-keyboard","unlisted":false},{"type":"link","label":"useMotion","href":"/docs/hooks/use-motion","docId":"hooks/use-motion","unlisted":false},{"type":"link","label":"useOffsetPosition","href":"/docs/hooks/use-offset-position","docId":"hooks/use-offset-position","unlisted":false},{"type":"link","label":"useOrientation","href":"/docs/hooks/use-orientation","docId":"hooks/use-orientation","unlisted":false},{"type":"link","label":"useOverlap","href":"/docs/hooks/use-overlap","docId":"hooks/use-overlap","unlisted":false},{"type":"link","label":"usePhysicsEngine","href":"/docs/hooks/use-physics-engine","docId":"hooks/use-physics-engine","unlisted":false},{"type":"link","label":"usePlatformMovement","href":"/docs/hooks/use-platform-movement","docId":"hooks/use-platform-movement","unlisted":false},{"type":"link","label":"usePointer","href":"/docs/hooks/use-pointer","docId":"hooks/use-pointer","unlisted":false},{"type":"link","label":"usePosition","href":"/docs/hooks/use-position","docId":"hooks/use-position","unlisted":false},{"type":"link","label":"useProperty","href":"/docs/hooks/use-property","docId":"hooks/use-property","unlisted":false},{"type":"link","label":"useRender","href":"/docs/hooks/use-render","docId":"hooks/use-render","unlisted":false},{"type":"link","label":"useShaker","href":"/docs/hooks/use-shaker","docId":"hooks/use-shaker","unlisted":false},{"type":"link","label":"useSpeech","href":"/docs/hooks/use-speech","docId":"hooks/use-speech","unlisted":false},{"type":"link","label":"useSwipe","href":"/docs/hooks/use-swipe","docId":"hooks/use-swipe","unlisted":false},{"type":"link","label":"useSync","href":"/docs/hooks/use-sync","docId":"hooks/use-sync","unlisted":false},{"type":"link","label":"useTicker","href":"/docs/hooks/use-ticker","docId":"hooks/use-ticker","unlisted":false},{"type":"link","label":"useUpdate","href":"/docs/hooks/use-update","docId":"hooks/use-update","unlisted":false},{"type":"link","label":"useViewport","href":"/docs/hooks/use-viewport","docId":"hooks/use-viewport","unlisted":false},{"type":"link","label":"useWorld","href":"/docs/hooks/use-world","docId":"hooks/use-world","unlisted":false}]}]},"docs":{"components/bitmap-image":{"id":"components/bitmap-image","title":"BitmapImage","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/bitmap-sprite":{"id":"components/bitmap-sprite","title":"BitmapSprite","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/box":{"id":"components/box","title":"Box","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/camera":{"id":"components/camera","title":"Camera","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/circle":{"id":"components/circle","title":"Circle","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/collision-box":{"id":"components/collision-box","title":"CollisionBox","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/device":{"id":"components/device","title":"Device","description":"This component provides access to the dimensions of the device on which it\'s running. Nested component can access this information using the useDevice hook.","sidebar":"tutorialSidebar"},"components/engine":{"id":"components/engine","title":"Engine","description":"Where it all begins. The engine setups up the game loop, along with the following:","sidebar":"tutorialSidebar"},"components/node":{"id":"components/node","title":"Node","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/particle-generator":{"id":"components/particle-generator","title":"ParticleGenerator","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/physics":{"id":"components/physics","title":"Physics","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/physics-box":{"id":"components/physics-box","title":"PhysicsBox","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/physics-circle":{"id":"components/physics-circle","title":"PhysicsCircle","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/sprite-set":{"id":"components/sprite-set","title":"SpriteSet","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/tilemap":{"id":"components/tilemap","title":"Tilemap","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/vector-sprite":{"id":"components/vector-sprite","title":"VectorSprite","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/viewport":{"id":"components/viewport","title":"Viewport","description":"Coming soon...","sidebar":"tutorialSidebar"},"components/world":{"id":"components/world","title":"World","description":"Coming soon...","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"Added Overreact to your project is as simple as:","sidebar":"tutorialSidebar"},"guides/event-handling":{"id":"guides/event-handling","title":"Event Handling","description":"Overview","sidebar":"tutorialSidebar"},"guides/game-loop":{"id":"guides/game-loop","title":"Game Loop","description":"Overview","sidebar":"tutorialSidebar"},"guides/properties":{"id":"guides/properties","title":"Properties","description":"In Overreact you\'ll work with props a little differently to how you would typically use props in a React app.","sidebar":"tutorialSidebar"},"hooks/use-audio":{"id":"hooks/use-audio","title":"useAudio","description":"useAudio is a hook that provides access to audio playing functionality.","sidebar":"tutorialSidebar"},"hooks/use-collision":{"id":"hooks/use-collision","title":"useCollision","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-device":{"id":"hooks/use-device","title":"useDevice","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-dynamic-property":{"id":"hooks/use-dynamic-property","title":"useDynamicProperty","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-element":{"id":"hooks/use-element","title":"useElement","description":"Create a reference to an HTML element, along with a handful of helper functions for modifying that element.","sidebar":"tutorialSidebar"},"hooks/use-keyboard":{"id":"hooks/use-keyboard","title":"useKeyboard","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-motion":{"id":"hooks/use-motion","title":"useMotion","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-offset-position":{"id":"hooks/use-offset-position","title":"useOffsetPosition","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-orientation":{"id":"hooks/use-orientation","title":"useOrientation","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-overlap":{"id":"hooks/use-overlap","title":"useOverlap","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-physics-engine":{"id":"hooks/use-physics-engine","title":"usePhysicsEngine","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-platform-movement":{"id":"hooks/use-platform-movement","title":"usePlatformMovement","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-pointer":{"id":"hooks/use-pointer","title":"usePointer","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-position":{"id":"hooks/use-position","title":"usePosition","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-property":{"id":"hooks/use-property","title":"useProperty","description":"Turn a Prop (either a Property or a literal value) into a Property. See the guide on properties for a detailed explanation on how props are used in Overreact.","sidebar":"tutorialSidebar"},"hooks/use-render":{"id":"hooks/use-render","title":"useRender","description":"Register a callback function that will be invoked every frame, regardless of whether or not the game is paused. It is responsible for updating the appearance of elements in the DOM to reflect the current game state.","sidebar":"tutorialSidebar"},"hooks/use-shaker":{"id":"hooks/use-shaker","title":"useShaker","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-speech":{"id":"hooks/use-speech","title":"useSpeech","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-swipe":{"id":"hooks/use-swipe","title":"useSwipe","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-sync":{"id":"hooks/use-sync","title":"useSync","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-ticker":{"id":"hooks/use-ticker","title":"useTicker","description":"Register a callback function that will be invoked once per frame. It it like useUpdate but runs even when the game is paused.","sidebar":"tutorialSidebar"},"hooks/use-update":{"id":"hooks/use-update","title":"useUpdate","description":"Register a callback function that will be invoked once per frame, whilst the game is not paused. It is responsible for updating some of the game state.","sidebar":"tutorialSidebar"},"hooks/use-viewport":{"id":"hooks/use-viewport","title":"useViewport","description":"Coming soon...","sidebar":"tutorialSidebar"},"hooks/use-world":{"id":"hooks/use-world","title":"useWorld","description":"Coming soon...","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Overreact is a browser-based game engine, built on top of React, which renders to the DOM, is is styled with plain old CSS!","sidebar":"tutorialSidebar"}}}')}}]);