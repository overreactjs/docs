"use strict";(self.webpackChunkoverreact_docs=self.webpackChunkoverreact_docs||[]).push([[9671],{7876:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=n(5893),i=n(1151);const o={sidebar_position:1},a="Introduction",s={id:"intro",title:"Introduction",description:"Overreact is a browser-based game engine, built on top of React, which renders to the DOM, is is styled with plain old CSS!",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/docs/getting-started"}},l={},d=[{value:"Why build a new game engine?",id:"why-build-a-new-game-engine",level:2}];function c(e){const t={em:"em",h1:"h1",h2:"h2",p:"p",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"Overreact"})," is a browser-based game engine, built on top of React, which renders to the DOM, is is styled with plain old CSS!"]}),"\n",(0,r.jsx)(t.p,{children:"\u269b\ufe0f\u2002Built on top of React, allowing you to utilize the same patterns and architecture you're familiar with."}),"\n",(0,r.jsx)(t.p,{children:"\u26a1\ufe0f\u2002Share components with the rest of your app. Use your design system components in your game!"}),"\n",(0,r.jsx)(t.p,{children:"\ud83d\udc85\u2002Style your game elements using regular CSS. Or bring in your favorite CSS frameworks, such as tailwind."}),"\n",(0,r.jsx)(t.h2,{id:"why-build-a-new-game-engine",children:"Why build a new game engine?"}),"\n",(0,r.jsx)(t.p,{children:"Sure, there are a number of well-written, well-tested, well-documented, and well-supported browser-based game engines out there already. There are even some that are built on top of React, and not all of them render to a canvas, although nearly all do."}),"\n",(0,r.jsx)(t.p,{children:"But, like many interesting projects, this started out as an experiment. Other game engines require a paradigm shift away from what frontend developers are familiar with. To some extend that will always be necessary, but I wanted to see if it was feasible to build a game engine that leans into React's component-based philosophy, that renders to the DOM and can be styled using CSS or tools such as tailwind."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"Overreact"})," is the outcome of that experiment!"]})]})}function u(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>a});var r=n(7294);const i={},o=r.createContext(i);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);